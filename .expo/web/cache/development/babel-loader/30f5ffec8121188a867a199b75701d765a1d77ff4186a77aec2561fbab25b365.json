{"ast":null,"code":"import { NativeModulesProxy } from 'expo-modules-core';\nexport default NativeModulesProxy.ExpoAppleAuthentication || {\n  isAvailableAsync: function isAvailableAsync() {\n    return Promise.resolve(false);\n  },\n  addListener: function addListener() {\n    return Promise.resolve();\n  },\n  removeListeners: function removeListeners() {\n    return Promise.resolve();\n  }\n};","map":{"version":3,"names":["NativeModulesProxy","ExpoAppleAuthentication","isAvailableAsync","Promise","resolve","addListener","removeListeners"],"sources":["/home/khanhuy/Documents/js/apple-auth/node_modules/expo-apple-authentication/src/ExpoAppleAuthentication.ts"],"sourcesContent":["import { NativeModulesProxy } from 'expo-modules-core';\nimport { NativeModule } from 'react-native';\n\nexport default NativeModulesProxy.ExpoAppleAuthentication ||\n  // If the real native module doesn't exist, make a pretend one, instead of\n  // `null`, so we can offer an `isAvailableAsync` (that will always give\n  // `false`, because we're on an unsupported platform).\n  ({\n    isAvailableAsync(): Promise<boolean> {\n      return Promise.resolve(false);\n    },\n\n    // RN v0.65 gives a console warning if this method is missing; see\n    //   https://github.com/facebook/react-native/commit/114be1d21\n    addListener() {\n      // Nothing to do; unsupported platform.\n      return Promise.resolve();\n    },\n\n    // RN v0.65 gives a console warning if this method is missing; see\n    //   https://github.com/facebook/react-native/commit/114be1d21\n    removeListeners() {\n      // Nothing to do; unsupported platform.\n      return Promise.resolve();\n    },\n  } as NativeModule);\n"],"mappings":"AAAA,SAASA,kBAAkB,QAAQ,mBAAmB;AAGtD,eAAeA,kBAAkB,CAACC,uBAAuB,IAItD;EACCC,gBAAgB,WAAAA,iBAAA;IACd,OAAOC,OAAO,CAACC,OAAO,CAAC,KAAK,CAAC;EAC/B,CAAC;EAIDC,WAAW,WAAAA,YAAA;IAET,OAAOF,OAAO,CAACC,OAAO,EAAE;EAC1B,CAAC;EAIDE,eAAe,WAAAA,gBAAA;IAEb,OAAOH,OAAO,CAACC,OAAO,EAAE;EAC1B;CACgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}